- name: Copying Mysql repo
  ansible.builtin.copy:
    src: "{{COMPONENT}}.repo"
    dest: /etc/yum.repos.d/{{COMPONENT}}.repo

- name: Installing MySql
  ansible.builtin.yum
    name: 
      - mysql-community-server
      - MySQL-python
    state: present

- name: Starting MySQL service
  ansible.builtin.service:
    name: mysqld
    state: started
    enabled: true

- name: Reading MySQL Logfile                                #slurp module takes the file from the remote node
  ansible.builtin.slurp:
    src: /var/log/mysqld.log
  register: mysql_log

#- name: Declaring the fact in a variable
 # ansible.builtin.set_fact: 
    #DEFAULT_PASS: "{{mysql_log['content'] |b64decode }}"

#- name: "Printing the output"
  #debug:
   # msg: "{{DEFAULT_PASS}}"

- name: Checking default root password
  block: 
    - name: Fetch MySQL version to check the DB connection
      mysql_info:
        login_user: root
        login_password: "{{DB_PASSWORD}}"
        filter: version

  rescue:  
    - name: Load MySQL Logfile                                #slurp module takes the file from the remote node
    ansible.builtin.slurp:
      src: /var/log/mysqld.log
    register: mysql_log

    - name: Copy root password change change command
      ansible.builtin.copy
        src: root-pass.sql
        dest: /tmp/root-pass.sql

    - name: Declare facts
      ansible.builtin.set_fact:
      DEFAULT_PASS: "{{mysql_log['content'] | b64 decode | regex_findall('temporary password.*') | join(' ') | split (' ')  | last }}"  # we can see temporary pw now and it will be in readable format; .* include everything which has temporary pw

    - name: Change MySQL
      ansible.builtin.shell: echo ALTER USER 'root'@'localhost' IDENTIFIED BY '{{DB_PASSWORD}}';" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}

- name: Check validate plugin exists
  ansible.builtin.shell: echo "uninstall plugin validate_password; | mysql -uroot -p"{{DB_PASSWORD}"
  ignore_errors: yes


- name: Downloading and extracting the component
  include_role:
    name: common
    tasks_from: download

- name: Injecting the schema
  community.mysql.mysql_db
    name: all_db
    state: import
    target: /tmp/mysql-main/shipping.sql
    login_user: root
    login_password: {{DB_PASSWORD}}


    #- name: Printing
      #ansible.builtin.debug:
        #msg: "{{DEFAULT_PASS}}"



    
    #reading the mysql file using slurp, it will be encoded


#Using set_fact, I will be preserving output in a variable

#- name: Reset password block
  #when: MYSQL_STAT.failed                             #This task will be executed only when the status of failed is true
  #ignore_errors: yes                          
  #block:                                            #block helps to tie more tasks and can be used at a single shot
    #- name: Fetching the Default Password
      #ansible.builtin.shell: grep "temporary password" /var/log/mysqld.log | awk '{print $NF}'
      #register: DEFAULT_ROOT_PASSWORD

    #- name: Copying Mysql repo
      #ansible.builtin.copy:
      #src:root-pass.sql
      #dest: /tmp/root-pass.sql

  #Block and rescue method: can conditionolize 5 or 6 tasks using block. rescue block will specify task to run when earlier in a block fails
  #In latest mysql, they are not allowing passwords in plain text, hence use above modules(hence shell method not working, using ansible method)
  #Block and rescue work together. Rescue tasks will only execute when the task in block fail

    #- name: Reset Default Password
      #ansible.builtin.shell: mysql --connect-expire-password -uroot -p"{{DEFAULT_ROOT_PASSWORD}}" < /tmp/root-pass.sql     #password will be changed
      
